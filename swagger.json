{
  "openapi": "3.0.1",
  "info": {
    "version": "1.2.0",
    "title": "GooseTrack",

    "description": "[**GooseTrack**](https://larik7.github.io/GooseTrack-Frontend/) is an intuitive calendar app that helps you plan and complete tasks efficiently. Whether you need to create a new task, update an existing one, or delete one, GooseTrack provides easy access to all of these options. In addition, you can easily extract the list of tasks for any selected month to keep track of your schedule.</br></br>One of the special benefits of **GooseTrack** is the ability to customize your profile. Update your information, upload an avatar to make it more personal. We value your feedback, which is why **GooseTrack** provides a handy feedback feature where you can share your thoughts, suggest improvements, or simply express gratitude. Your feedback is a valuable contribution to the development of our application.</br></br>So, whether you need to optimize your calendar usage, organize your schedule, and manage your tasks, **GooseTrack** is your ideal choice. A user-friendly interface allows you to make the most of the calendar application and control your busy life. You can start using this amazing app right now.You can find additional information and details in the [repository](https://github.com/Larik7/GooseTrack-Backend) of this [application](https://github.com/Larik7/GooseTrack-Frontend). Enter the world of organization and better planning with **GooseTrack** today!"
},
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json; charset=utf-8"],
  "servers": [{ "url": "https://goosetrackback.onrender.com" }, { "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],

  "paths": {  
    "/api/auth/registration": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
          "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
          "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user/pass": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Changes the password.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Password change object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/changePassRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/changePassResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Token refresh.",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Token refresh object.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify user by token",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Retrieves an info about current user.",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user info and upload avatar",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User info and avatar upload",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout.",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },




    "/api/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Returns a list of all reviews",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "example": 20,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "page",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAllReviewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },


    "/api/reviews/own": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Returns current user's review",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Creates current user's review",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Review object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Reviews"
        ],
        "summary": "Updates an existing review of current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Review object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Deletes an existing review of current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },




    "/api/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Returns a list of current user's tasks per month",
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "example": "2023-06",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTasksResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates current user's task",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    },


    "/api/tasks/{id}": {
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates an existing task of current user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Deletes an existing task of curent user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notFoundResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conflictResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "name"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          }
        }
      },
      "updateUserInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "birthday": {
            "type": "string",
            "description": "Day of birthday in `YYYY-MM-DD` format",
            "example": "2000-01-01"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "skype": {
            "type": "string",
            "description": "Skype"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Alexey"
              },
              "email": {
                "type": "string",
                "example": "aqweqwe@gmail.com"
              }
            }
          }
        }
      },
      "loginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "loginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 201
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIs....."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJcsa15c1sa515csa54....."
          }
        }
      },
      "changePassResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "string",
            "example": true
          }
        }
      },
      "changePassRequest": {
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "properties": {
          "old_password": {
            "type": "string",
            "example": "qwerty123"
          },
          "new_password": {
            "type": "string",
            "example": "123qwerty"
          }
        }
      },
      "refreshRequest": {
        "type": "object",
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJcsa15c1sa515csa54....."
          }
        }
      },
      "refreshResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIs....."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJcsa15c1sa515csa54....."
          }
        }
      },
      "verifyResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Verification email sent"
              }
            }
          }
        }
      },
      "currentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Goose"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "goose@track.com"
              },
              "avatarURL": {
                "type": "string",
                "example": "https://larik7.github.io/GooseTrack-Frontend/static/media/Goose@2x.3c0470b19aa18aaef0d8.png"
              },
              "birthday": {
                "type": "string",
                "format": "date-time",
                "example": "2023-06-09T22:07:46.170Z"
              },
              "phone": {
                "type": "string",
                "example": "+123564689"
              },
              "skype": {
                "type": "string",
                "example": "@Goose"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-06-09T22:07:46.176Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-06-09T22:17:38.953Z"
              }
            }
          }
        }
      },



      "createReviewRequest": {
        "type": "object",
        "required": [
          "rating",
          "required"
        ],
        "properties": {
          "rating": {
            "type": "integer",
            "description": "Rating"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "The best application :-)"
          }
        }
      },
      "createReviewResponse": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "The best application :-)"
          },
          "rating": {
            "type": "integer"
          },
          "owner": {
            "type": "string",
            "example": "649ab7f56f47f612c3a16173"
          },
          "_id": {
            "type": "string",
            "example": "649abce1edd160c16a812c59"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-27T10:41:37.790Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-27T10:41:37.790Z"
          }
        }
      },
      "getAllReviewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "649abce1edd160c16a812c59",
              "description": "Review ID"
            },
            "comment": {
              "type": "string",
              "description": "Comment",
              "example": "The best application :-)"
            },
            "rating": {
              "type": "integer"
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "649ab7f56f47f612c3a16173",
                  "description": "User ID"
                },
                "name": {
                  "type": "string",
                  "example": "User",
                  "description": "User Name"
                },
                "avatarURL": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "getReviewResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "649abce1edd160c16a812c59",
            "description": "Review ID"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "The best application :-)"
          },
          "rating": {
            "type": "integer"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "649ab7f56f47f612c3a16173",
                "description": "User ID"
              },
              "name": {
                "type": "string",
                "example": "User",
                "description": "User Name"
              },
              "avatarURL": {
                "type": "string"
              }
            }
          }
        }
      },
      "updateReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "description": "Rating"
          },
          "comment": {
            "type": "string",
            "description": "Comment",
            "example": "The best application :-)"
          }
        }
      },




      "createTaskRequest": {
        "type": "object",
        "required": [
          "title",
          "date",
          "start",
          "end",
          "priority",
          "category"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of a task.",
            "example": "Task 01"
          },
          "date": {
            "type": "string",
            "description": "Day on which to schedule a task. In format YYYY-MM-DD",
            "example": "2023-06-28"
          },
          "start": {
            "type": "string",
            "description": "Start time. In `HH:mm` format.",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "End time. In `HH:mm` format. Must be greater than `start`.",
            "example": "17:00"
          },
          "priority": {
            "type": "string",
            "description": "Priority of a task. Possible values: `\"low\", \"medium\", \"high\"`",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "medium"
          },
          "category": {
            "type": "string",
            "enum": [
              "to-do",
              "in-progress",
              "done"
            ],
            "description": "Category of a task. Possible values: `\"to-do\", \"in-progress\", \"done\"`",
            "example": "to-do"
          }
        }
      },
      "createTaskResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "start": {
              "type": "string"
            },
            "end": {
              "type": "string"
            },
            "priority": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            },
            "category": {
              "type": "string",
              "enum": [
                "to-do",
                "in-progress",
                "done"
              ]
            },
            "owner": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "example": {
          "_id": "649c047292471fc32c3964ec",
          "title": "Task 01",
          "date": "2023-08-30",
          "start": "09:00",
          "end": "10:00",
          "priority": "medium",
          "category": "to-do",
          "owner": "649ab7f56f47f612c3a16173",
          "createdAt": "2023-06-28T09:59:14.548Z",
          "updatedAt": "2023-06-28T09:59:14.548Z"
        }
      },
      "getTasksResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "start": {
              "type": "string"
            },
            "end": {
              "type": "string"
            },
            "priority": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            },
            "category": {
              "type": "string",
              "enum": [
                "to-do",
                "in-progress",
                "done"
              ]
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "649ab7f56f47f612c3a16173",
                  "description": "User ID"
                },
                "name": {
                  "type": "string",
                  "example": "User",
                  "description": "User Name"
                }
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "example": {
          "_id": "649c047292471fc32c3964ec",
          "title": "Task 01",
          "date": "2023-08-30",
          "start": "09:00",
          "end": "10:00",
          "priority": "medium",
          "category": "to-do",
          "owner": {
            "_id": "649ab7f56f47f612c3a16173",
            "name": "User Name"
          }, 
          "createdAt": "2023-06-28T09:59:14.548Z",
          "updatedAt": "2023-06-28T09:59:14.548Z"
        }
      },
      "updateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of a task.",
            "example": "Task 01"
          },
          "date": {
            "type": "string",
            "description": "Day on which to schedule a task. In format YYYY-MM-DD",
            "example": "2023-06-28"
          },
          "start": {
            "type": "string",
            "description": "Start time. In `HH:mm` format.",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "End time. In `HH:mm` format. Must be greater than `start`.",
            "example": "17:00"
          },
          "priority": {
            "type": "string",
            "description": "Priority of a task. Possible values: `\"low\", \"medium\", \"high\"`",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "medium"
          },
          "category": {
            "type": "string",
            "enum": [
              "to-do",
              "in-progress",
              "done"
            ],
            "description": "Category of a task. Possible values: `\"to-do\", \"in-progress\", \"done\"`",
            "example": "to-do"
          }
        }
      },




      "badRequestResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Bad Request"
        }
      },
      "unauthorizedResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Unauthorized"
        }
      },
      "notFoundResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Not found"
        }
      },
      "forbiddenResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Forbidden"
        }
      },
      "conflictResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        },
        "example": {
          "message": "Conflict"
        }
      }
    },

    
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
